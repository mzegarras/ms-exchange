# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      ls -lta .
      pwd
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'verify'
    codeCoverageToolOption: 'jaCoCo' # Optional. Options: none, cobertura, jaCoCo. Enabling code coverage inserts the `clean` goal into the Maven goals list when Maven runs.
    #preserveTimestamp: false # Optional    
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      
      ls -lta ./target
      pwd
- task: Docker@2
  displayName: Build an image
  inputs:
    command: 'build'
    dockerFile: '**/src/main/docker/Dockerfile'
    buildContext: $(Build.Repository.LocalPath)
    repository: $(TAG_CONTAINER)
 #   tags: |
#          $(TAG_CONTAINER):$(Build.BuildId)
- task: Docker@2
  displayName: login docker hub
  inputs:
    containerRegistry: 'docke hub'
    command: 'login'          
- task: Docker@2
  displayName: push image docker
  inputs:
    containerRegistry: 'docke hub'
    command: 'push'
    repository: $(TAG_CONTAINER)
#    tags: '$(TAG_CONTAINER):$(Build.BuildId)'